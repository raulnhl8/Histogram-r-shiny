app.r
app
run app
library(shiny)
ui <- fluidPage(
titlePanel("Este eh um teste")
)
server <- function(input, output) {
}
shinyApp(ui = ui, server = server)
ui <- fluidPage(
titlePanel("Este eh um teste"),
sideBarLayout(
sidebarPanel(
textInput()
),
mainPanel()
)
)
ui <- fluidPage(
titlePanel("Este eh um teste"),
)
library(shiny)
ui <- fluidPage(
titlePanel("Este eh um teste"),
)
server <- function(input, output) {
}
shinyApp(ui = ui, server = server)
library(shiny)
ui <- fluidPage(
titlePanel("Este eh um teste"),
sideBarLayout(
sidebarPanel(
textInput()
),
mainPanel()
)
)
server <- function(input, output) {
}
shinyApp(ui = ui, server = server)
library(shiny)
ui <- fluidPage(
titlePanel("Este eh um teste"),
sidebarLayout(
sidebarPanel(
textInput()
),
mainPanel()
)
)
server <- function(input, output) {
}
shinyApp(ui = ui, server = server)
runApp()
runApp()
input
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
install.packages("readr")
shiny::runApp()
runApp()
install.packages("readr")
shiny::runApp()
runApp()
shiny::runApp()
nchar("")
runApp()
shiny::runApp()
runApp()
runApp()
text <- "esse texto eh um rteste"
words <- strsplit(text, " ")
View(words)
print(words[[1]])
text <- "esse texto eh um rteste"
words <- strsplit(text, " ")[[1]]
tabela <- data.frame()
colnames(tabela) <- c("word", "count")
tabela <- data.frame("word", "count")
View(tabela)
tabela <- data.frame("word", "count")
colnames(tabela) <- c("word", "count")
View(tabela)
colnames(tabela) <- c("word", "count")
View(tabela)
rm(tabela)
colnames(tabela) <- c("word", "count")
tabela <- data.frame(words)
colnames(tabela) <- c("word", "count")
View(tabela)
rm(tabela)
tabela <- data.frame(words)
colnames(tabela) <- "word"
View(tabela)
text <- "esse texto eh um teste texto"
words <- strsplit(text, " ")[[1]]
tabela <- data.frame(words)
colnames(tabela) <- "word"
View(tabela)
tabela$count <- 1
View(tabela)
for (linha in tabela)
{
}
for (linha in tabela)
{
print(linha)
}
for (linha in tabela)
{
print(linha)
print("\n")
}
for(i in 1:nrow(tabela)) {
row <- tabela[i,]
# do stuff with row
print(row)
}
duplicated(tabela)
duplicados <- duplicated(tabela)
for (i in 1:nrow(duplicados))
{
}
for (i in 1:ncols(duplicados))
{
}
for (i in 1:size(duplicados))
{
}
for (i in 1:length(duplicados))
{
}
for (i in 1:length(duplicados))
{
if (duplcados[i] == TRUE)
{
row <- tabela[i,]
print(row)
}
}
for (i in 1:length(duplicados))
{
if (duplicados[i] == TRUE)
{
row <- tabela[i,]
print(row)
}
}
for (i in 1:length(duplicados))
{
if (duplicados[i] == TRUE)
{
row <- tabela[i,]
print(row)
for (j in 1:i)
{
if (tabela[j,]$word == row$word)
{
row$count = row$count + 1
}
}
}
}
View(tabela)
for (i in 1:length(duplicados))
{
if (duplicados[i] == TRUE)
{
row <- tabela[i,]
print(row)
for (j in 1:i)
{
if (tabela[j,]$word == row$word)
{
tabela[i,]$count = tabela[i,]$count + 1
}
}
}
}
View(tabela)
rm(tabela)
text <- "esse texto eh um teste texto"
words <- strsplit(text, " ")[[1]]
tabela <- data.frame(words)
colnames(tabela) <- "word"
tabela$count <- 1
for(i in 1:nrow(tabela)) {
row <- tabela[i,]
# do stuff with row
print(row)
}
duplicados <- duplicated(tabela)
for (i in 1:length(duplicados))
{
if (duplicados[i] == TRUE)
{
row <- tabela[i,]
print(row)
for (j in 1:i)
{
if (tabela[j,]$word == row$word)
{
tabela[j,]$count = tabela[j,]$count + 1
}
}
}
}
rm(tabela)
text <- "esse texto eh um teste texto"
words <- strsplit(text, " ")[[1]]
tabela <- data.frame(words)
colnames(tabela) <- "word"
tabela$count <- 1
for(i in 1:nrow(tabela)) {
row <- tabela[i,]
# do stuff with row
print(row)
}
duplicados <- duplicated(tabela)
for (i in 1:length(duplicados))
{
if (duplicados[i] == TRUE)
{
row <- tabela[i,]
print(row)
for (j in 1:(i-1))
{
if (tabela[j,]$word == row$word)
{
tabela[j,]$count = tabela[j,]$count + 1
}
}
}
}
for (i in 1:length(duplicados))
{
if (duplicados[i] == TRUE)
{
row <- tabela[i,]
print(row)
for (j in 1:(i-1))
{
if (tabela[j,]$word == row$word)
{
tabela[j,]$count = tabela[j,]$count + 1
tabela <- tabela[-i,]
}
}
}
}
text <- "esse texto eh um teste texto"
words <- strsplit(text, " ")[[1]]
tabela <- data.frame(words)
colnames(tabela) <- "word"
tabela$count <- 1
for(i in 1:nrow(tabela)) {
row <- tabela[i,]
# do stuff with row
print(row)
}
duplicados <- duplicated(tabela)
for (i in 1:length(duplicados))
{
if (duplicados[i] == TRUE)
{
row <- tabela[i,]
print(row)
for (j in 1:(i-1))
{
if (tabela[j,]$word == row$word)
{
tabela[j,]$count = tabela[j,]$count + 1
tabela <- tabela[-i,]
}
}
}
}
tabela <- tabela[order(tabela$count),]
tabela <- tabela[-order(tabela$count),]
text <- "esse texto eh um teste texto"
words <- strsplit(text, " ")[[1]]
tabela <- data.frame(words)
colnames(tabela) <- "word"
tabela$count <- 1
duplicados <- duplicated(tabela)
for (i in 1:length(duplicados))
{
if (duplicados[i] == TRUE)
{
row <- tabela[i,]
print(row)
for (j in 1:(i-1))
{
if (tabela[j,]$word == row$word)
{
tabela[j,]$count = tabela[j,]$count + 1
tabela <- tabela[-i,]
}
}
}
}
tabela <- tabela[order(-tabela$count),]
text <- "esse texto eh um teste texto eh eh"
words <- strsplit(text, " ")[[1]]
tabela <- data.frame(words)
colnames(tabela) <- "word"
tabela$count <- 1
duplicados <- duplicated(tabela)
for (i in 1:length(duplicados))
{
if (duplicados[i] == TRUE)
{
row <- tabela[i,]
print(row)
for (j in 1:(i-1))
{
if (tabela[j,]$word == row$word)
{
tabela[j,]$count = tabela[j,]$count + 1
tabela <- tabela[-i,]
}
}
}
}
tabela <- tabela[order(-tabela$count),]
text <- "esse texto eh um teste texto eh eh"
words <- strsplit(text, " ")[[1]]
tabela <- data.frame(words)
colnames(tabela) <- "word"
tabela$count <- 1
duplicados <- duplicated(tabela)
for (i in 1:length(duplicados))
{
if (duplicados[i] == TRUE)
{
row <- tabela[i,]
print(row)
for (j in 1:(i-1))
{
if (tabela[j,]$word == row$word)
{
tabela[j,]$count = tabela[j,]$count + 1
}
}
}
}
tabela <- tabela[order(-tabela$count),]
text <- "esse texto eh um teste texto eh eh"
words <- strsplit(text, " ")[[1]]
tabela <- data.frame(words)
colnames(tabela) <- "word"
tabela$count <- 1
duplicados <- duplicated(tabela)
for (i in 1:length(duplicados))
{
if (duplicados[i] == TRUE)
{
row <- tabela[i,]
print(row)
for (j in 1:(i-1))
{
if (tabela[j,]$word == row$word)
{
tabela[j,]$count = tabela[j,]$count + 1
break
}
}
}
}
tabela <- tabela[order(-tabela$count),]
tabela <- tabela[!duplicated(tabela$word), ]
barplot(t(as.matrix(tabela)), beside=TRUE)
barplot(tabela)
barplot(tabela, height = tabela[1,]$count)
tabela[1,]$count
nrow(tabela)
barplot(tabela, height = tabela[1,]$count, width = nrow(tabela))
barplot(data = tabela, height = tabela[1,]$count, width = nrow(tabela))
barplot(data = tabela, height = tabela$count, width = nrow(tabela))
barplot(data = tabela, height = tabela$count, width = tabela$word)
barplot(data = tabela, height = tabela$count)
barplot(height = tabela$count, names.arg = tabela$word)
text <- "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum"
words <- strsplit(text, " ")[[1]]
tabela <- data.frame(words)
colnames(tabela) <- "word"
tabela$count <- 1
duplicados <- duplicated(tabela)
for (i in 1:length(duplicados))
{
if (duplicados[i] == TRUE)
{
row <- tabela[i,]
print(row)
for (j in 1:(i-1))
{
if (tabela[j,]$word == row$word)
{
tabela[j,]$count = tabela[j,]$count + 1
break
}
}
}
}
tabela <- tabela[order(-tabela$count),]
tabela <- tabela[!duplicated(tabela$word), ]
barplot(height = tabela$count, names.arg = tabela$word)
text <- "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum"
words <- strsplit(text, " ")[[1]]
tabela <- data.frame(words)
colnames(tabela) <- "word"
tabela$count <- 1
duplicados <- duplicated(tabela)
for (i in 1:length(duplicados))
{
if (duplicados[i] == TRUE)
{
row <- tabela[i,]
print(row)
for (j in 1:(i-1))
{
if (tabela[j,]$word == row$word)
{
tabela[j,]$count = tabela[j,]$count + 1
break
}
}
}
}
tabela <- tabela[order(-tabela$count),]
tabela <- tabela[!duplicated(tabela$word), ]
barplot(height = tabela$count, names.arg = tabela$word)
barplot(tabela)
barplot(height = tabela$count, names.arg = tabela$word)
barplot(height = tabela$count, names.arg = tabela$word, cex.names=.5)
barplot(height = tabela$count, names.arg = tabela$word, width=2)
barplot(height = tabela$count, names.arg = tabela$word, width=20)
barplot(height = tabela$count, names.arg = tabela$word, width=2)
barplot(height = tabela$count, names.arg = tabela$word, width=2, xlim=2)
barplot(height = tabela$count, names.arg = tabela$word, width=2, xlim=1)
barplot(height = tabela$count, names.arg = tabela$word)
barplot(height = tabela$count, names.arg = tabela$word, las=2)
barplot(height = tabela$count, names.arg = tabela$word, las=2, cex.names=.5)
barplot(height = tabela$count, names.arg = tabela$word, las=2, cex.names=.5, width=2, xlim=c(0, 10))
barplot(height = tabela$count, names.arg = tabela$word, las=2, cex.names=.5, width=2, xlim=c(0, 1))
barplot(height = tabela$count, names.arg = tabela$word, las=2, cex.names=.5, width=2, xlim=c(0, 100))
barplot(height = tabela$count, names.arg = tabela$word, las=2, cex.names=.5, width=1, xlim=c(0, 100)
)
barplot(height = tabela$count, names.arg = tabela$word, las=2, cex.names=.5, width=1, xlim=c(0, 50)
)
barplot(height = tabela$count, names.arg = tabela$word, las=2, cex.names=.5, width=1, xlim=c(0, 50),
xlab = "Words", ylab="Count per word"
)
barplot(height = tabela$count, names.arg = tabela$word, las=2, cex.names=.5, width=1, xlim=c(0, 50),
xlab = "Words", ylab="Count per word", title="Histogram"
)
barplot(height = tabela$count, names.arg = tabela$word, las=2, cex.names=.5, width=1, xlim=c(0, 50),
xlab = "Words", ylab="Count per word", main="Histogram"
)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
